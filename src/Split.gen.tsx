/* TypeScript file generated by genType. */
/* eslint-disable import/first */


// tslint:disable-next-line:no-var-requires
const SplitBS = require('./Split.bs');

// tslint:disable-next-line:interface-over-type-literal
export type callback = (_1:number) => void;

// tslint:disable-next-line:interface-over-type-literal
export type Props = {
  readonly children: [JSX.Element, JSX.Element]; 
  readonly className?: string; 
  readonly classNameDragging?: string; 
  readonly classNameHorizontal?: string; 
  readonly classNameVertical?: string; 
  readonly direction?: string; 
  readonly maxSize?: number; 
  readonly minSize?: number; 
  readonly onDrag?: callback; 
  readonly onDragEnd?: callback; 
  readonly onDragStart?: callback; 
  readonly size?: number
};

export const make: React.ComponentType<{
  readonly children: [JSX.Element, JSX.Element]; 
  readonly className?: string; 
  readonly classNameDragging?: string; 
  readonly classNameHorizontal?: string; 
  readonly classNameVertical?: string; 
  readonly direction?: string; 
  readonly maxSize?: number; 
  readonly minSize?: number; 
  readonly onDrag?: callback; 
  readonly onDragEnd?: callback; 
  readonly onDragStart?: callback; 
  readonly size?: number
}> = SplitBS.make;
